Factorial Trailing Zeroes [Microsoft Python Interview Question]
Before, you work on this question, make sure you've solved the easier warmup problem Factorial Formula, where you need to write a function to compute 
�
n factorial as follows:

�
!
=
�
∗
(
�
−
1
)
∗
(
�
−
2
)
∗
.
.
.
.
.
2
∗
1
n!=n∗(n−1)∗(n−2)∗.....2∗1.

Now that you know the factorial formula, let's write a function that returns the number of trailing zeroes in n!.

For example, for 
5
!
5!, we'd return 1, because 
5
!
=
5
∗
4
∗
3
∗
2
∗
1
=
120
5!=5∗4∗3∗2∗1=120 and 120 has exactly 1 trailing zero.

For 
10
!
10!, which evaluates to 
3628800
3628800 we'd return 2, becuase there are two trailing zeroes.

Solution:
def trailing_zeroes(n):
    count = 0
    while n > 0:
        n //= 5
        count += n
    return count
    #we divide the number with powers of 5, 5 being the least. 
    

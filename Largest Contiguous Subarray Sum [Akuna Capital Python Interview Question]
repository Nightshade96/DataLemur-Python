Largest Contiguous Subarray Sum [Akuna Capital Python Interview Question]
Given an integer array, find the sum of the largest contiguous subarray within the array.

For example, if the input is [−1, −3, 5, −4, 3, −6, 9, 2], then return 11 (because of [9, 2]).

Note that if all the elements are negative, you should return 0.
Solution:
def max_subarray_sum(input):
  all_negative = all(i < 0 for i in input)
  curSum = 0
  maxSum = input[0]
  if all_negative:
    return 0
  else:
    for n in input:
      if curSum < 0:
        curSum = 0
      curSum += n
      maxSum = max(maxSum,curSum)
  return maxSum
# neetcode https://www.youtube.com/watch?v=5WZl3MMT0Eg
